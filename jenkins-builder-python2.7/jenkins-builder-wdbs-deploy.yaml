- job:
    name: jenkins-builder-WDBS-deploy
    project-type: pipeline
    sandbox: true
    parameters:
      - maven-metadata:
          name: 'DBS_VERSION'
          repository-base-url: 'http://artifactory.dev.whirl.sg/artifactory/QA'
          artifact-group-id: 'com.whirl'
          artifact-id: 'wdbs'
          packaging: 'tgz'
          versions-filter: '^.*dbs.*'
          default-value: 'FIRST'
          maximum-versions-to-display: "5"
          sorting-order: "Ascending"
      - string:
          name: DEVOPS_BR
          default: '${DEFAULT_DEVOPS_BRANCH}'
      - string:
          name: DBS_LICENSE
          default: 'f319-97ba-9845-b492-1f43-5651-6a4e-daba'
      - cascade-choice:
          project: 'jenkins-builder-WDBS-deploy'
          name: IAS_VERSION
          script: |
              import groovy.json.JsonSlurperClassic

              def addr       = "https://harbor.whirl.sg/api/repositories/ias/app/tags"
              def authString = 'jenkins:AQ!SW@de3?'.getBytes().encodeBase64().toString()

              def conn = addr.toURL().openConnection()
              conn.setRequestProperty( "Authorization", "Basic ${authString}" )
              if( conn.responseCode == 200 ) {
                def data = new JsonSlurperClassic().parseText( conn.content.text )
                return data.name

              }
          visible-item-count: 1
          fallback-script: |
            return ['Something Wrong']
          reference: ''
          choice-type: single
          filterable: True
    logrotate:
      numToKeep: 10
    pipeline-scm:
      scm:
        - git:
            url: http://git-cache.dev.whirl.sg:9909/bitbucket.org/whirlsoftware/whirl_devops
            credentials-id: '87657576578657685'
            branches:
              -  '*/${DEVOPS_BR}'
      script-path: 'pipelines/WDBS_DEPLOY/Jenkinsfile'

- view:
#    name: 'jenkins-builders'
#    view-type: list
#    description: "ATATATAT"
#    first-job: "jenkins-builder-WDBS-deploy"
    name: jenkins-builders
    view-type: list
    description: 'Sample description'
    filter-executors: true
    filter-queue: true
    job-name:
        - jenkins-builder-WDBS-deploy
        - job-name-2
        - job-name-3

#    views:
#      - jenkins-builders:
#          filter-executors: false
#          filter-queue: false
#          first-job:
#            - 'jenkins-builder-WDBS-deploy'


# https://pypi.python.org/pypi/jenkins-job-builder-active-choice
# https://github.com/bgaifullin/jenkins-job-builder-active-choice/issues/1  It doesn't work for JBB 2.0.0

# vim /tmp/test-builder/lib/python3.5/site-packages/jenkins_jobs_active_choice/active_choice.py
#   if not isinstance(x, (str)):
#    if not isinstance(x, (str, unicode)):



##
#vim local/lib/python2.7/site-packages/jenkins_jobs_addons/views.py
#
#    # def gen_xml(self, parser, xml_parent, data):
#    #     views = XML.SubElement(xml_parent, 'views')
#    #     for view in data.get('views', []):
#    #         self.registry.dispatch('view', parser, views, view)
#
#    def gen_xml(self, xml_parent, data):
#        views = XML.SubElement(xml_parent, 'views')
#        for view in data.get('views', []):
#            self.registry.dispatch('view', views, view)

